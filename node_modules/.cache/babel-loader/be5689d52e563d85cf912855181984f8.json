{"ast":null,"code":"import axios from 'axios'; //Actions type\n\nexport var actionsType = {\n  FETCH_DATA: 'FETCH_DATA' //Actions\n\n};\nexport var fetchData = function fetchData(dispatch) {\n  var API_KEY = 'q6OsSmMTqLJIT5cxFFtqf0bZoUCvh9pK10Sfouqu';\n  var END_POINT = 'https://api.nasa.gov/planetary/apod?api_key=';\n  axios.get(END_POINT + API_KEY).then(function (response) {\n    dispatch(receiveData(response));\n    console.log(response.data, '.....');\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\nvar receiveData = function receiveData(response) {\n  return {\n    type: actionsType.FETCH_DATA,\n    data: response.data\n  };\n};","map":{"version":3,"sources":["/Users/manuelsalgado/nasa-api-react-redux/src/actions/index.js"],"names":["axios","actionsType","FETCH_DATA","fetchData","dispatch","API_KEY","END_POINT","get","then","response","receiveData","console","log","data","catch","error","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,UAAU,EAAE,YADW,CAI3B;;AAJ2B,CAApB;AAKP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ,EAAI;AACjC,MAAMC,OAAO,GAAG,0CAAhB;AACA,MAAMC,SAAS,GAAG,8CAAlB;AAEAN,EAAAA,KAAK,CAACO,GAAN,CAAUD,SAAS,GAACD,OAApB,EACOG,IADP,CACY,UAAAC,QAAQ,EAAI;AAChBL,IAAAA,QAAQ,CAACM,WAAW,CAACD,QAAD,CAAZ,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB,EAA2B,OAA3B;AAEH,GALL,EAMKC,KANL,CAMW,UAAAC,KAAK,EAAI;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,GARL;AASH,CAbM;;AAeP,IAAML,WAAW,GAAG,SAAdA,WAAc,CAAAD,QAAQ;AAAA,SAAK;AAC7BO,IAAAA,IAAI,EAAEf,WAAW,CAACC,UADW;AAE7BW,IAAAA,IAAI,EAAEJ,QAAQ,CAACI;AAFc,GAAL;AAAA,CAA5B","sourcesContent":["import axios from 'axios'\n\n//Actions type\nexport const actionsType = {\n    FETCH_DATA: 'FETCH_DATA'\n}\n\n//Actions\nexport const fetchData = dispatch => {\n    const API_KEY = 'q6OsSmMTqLJIT5cxFFtqf0bZoUCvh9pK10Sfouqu'\n    const END_POINT = 'https://api.nasa.gov/planetary/apod?api_key='\n\n    axios.get(END_POINT+API_KEY)\n          .then(response => {\n            dispatch(receiveData(response))\n            console.log(response.data, '.....');\n            \n        })\n        .catch(error => {\n            console.log(error);\n        })\n}\n\nconst receiveData = response => ({\n    type: actionsType.FETCH_DATA,\n    data: response.data\n})\n\n"]},"metadata":{},"sourceType":"module"}
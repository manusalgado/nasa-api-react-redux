{"ast":null,"code":"import axios from 'axios';\nexport var actionsType = {\n  RECEIVE_DATA: 'RECEIVE_DATA'\n};\nexport var getData = function getData() {\n  return function (dispatch) {\n    var API_KEY = 'q6OsSmMTqLJIT5cxFFtqf0bZoUCvh9pK10Sfouqu';\n    var END_POINT = 'https://api.nasa.gov/planetary/apod?api_key=';\n    axios.get(END_POINT + API_KEY).then(function (response) {\n      dispatch(receiveData(response));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\n\nvar receiveData = function receiveData(response) {\n  return {\n    type: actionsType.RECEIVE_DATA,\n    astronomy: response.data\n  };\n};","map":{"version":3,"sources":["/Users/manuelsalgado/nasa-api-react-redux/src/actions/index.js"],"names":["axios","actionsType","RECEIVE_DATA","getData","dispatch","API_KEY","END_POINT","get","then","response","receiveData","catch","error","console","log","type","astronomy","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,YAAY,EAAE;AADS,CAApB;AAIP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAErC,QAAMC,OAAO,GAAG,0CAAhB;AACA,QAAMC,SAAS,GAAG,8CAAlB;AAEAN,IAAAA,KAAK,CACAO,GADL,CACSD,SAAS,GAACD,OADnB,EAEKG,IAFL,CAEU,UAAAC,QAAQ,EAAI;AACdL,MAAAA,QAAQ,CAACM,WAAW,CAACD,QAAD,CAAZ,CAAR;AACH,KAJL,EAKKE,KALL,CAKW,UAAAC,KAAK,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPL;AASH,GAdsB;AAAA,CAAhB;;AAgBP,IAAMF,WAAW,GAAG,SAAdA,WAAc,CAAAD,QAAQ;AAAA,SAAI;AAC5BM,IAAAA,IAAI,EAAEd,WAAW,CAACC,YADU;AAE5Bc,IAAAA,SAAS,EAAEP,QAAQ,CAACQ;AAFQ,GAAJ;AAAA,CAA5B","sourcesContent":["import axios from 'axios'\n\n\nexport const actionsType = {\n    RECEIVE_DATA: 'RECEIVE_DATA'\n}\n\nexport const getData = () => dispatch => {\n\n    const API_KEY = 'q6OsSmMTqLJIT5cxFFtqf0bZoUCvh9pK10Sfouqu'\n    const END_POINT = 'https://api.nasa.gov/planetary/apod?api_key='\n\n    axios\n        .get(END_POINT+API_KEY)\n        .then(response => {\n            dispatch(receiveData(response))\n        })\n        .catch(error => {\n            console.log(error)\n        })\n\n}\n\nconst receiveData = response =>({\n    type: actionsType.RECEIVE_DATA,\n    astronomy: response.data\n})"]},"metadata":{},"sourceType":"module"}